#!groovy

pipeline {
    agent { 
        label 'master'
    }

    triggers{pollSCM('* * * * *')}

    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }

    stages {
        stage("env") {
            steps {
                sh "env"
            }
        }
        stage("clear") {
            steps {
                sh "rm -rf ./*"
            }
        }

        stage("Clone") {
            steps {
                sh "git clone https://github.com/andrey-karpenchuk/devx-ops.git"
                sh "ls -la"
            }
        }
        stage("Install requirements") {
            steps {
                sh 'pip3 install -r ./devx-ops/requirements.txt'
            }
        }

//        stage("check hetrixtools") {
//            steps {
//            withCredentials([string(credentialsId: 'API_hetrix', variable: 'TOKEN')]) {
//                sh 'python3 ./devx-ops/check_hetrixtools.py $TOKEN google.com'
//                }
//            }
//        }

        stage("check url_abuse.py") {
            steps {
                sh 'python3 ./devx-ops/check_url_abuse.py --first=ukr.net --second=80.11.158.65 --tree=carlosmartins.ca'
            }
        }
    }
}